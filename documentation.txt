1. use the NJ styling
2. mkdir config
3. mkdir instance
4. touch docker-compose.yaml
5. touch Dockerfile
6. git config --list --show origin
7. git status
8. touch .gitignore
9. touch requirements
10. touch .dockerignore
11. docker-compose
12. version "2"
13. gunicorn command with --bind option - to 0.0.0.0:8000
14. entry-point is: "app:create_app()"
15. touch Dockerfile
16. touch config/settings.py
17. touch instance/settings.py
18. touch snakeeyes/__init__.py
19. touch snakeeyes/app.py
20. Rid the container of all image trash
21. Add sphinx
22. mkdir docs
23. cd docs && sphinx-quickstart
24. cd docs && make html
25. Add docs folder to .gitignore
26. touch docs/requirements.txt

$ docker-compose build --no-cache
$ docker-compose up
$ ctrl-C
$ docker-compose stop
$ docker-compose down
$ docker rmi f $(docker images -qf dangling=true)

27. mkdir snakeeyes/blueprints
28. mkdir snakeeyes/static
29. mkdir snakeeyes/templates
30. mkdir snakeeyes/blueprints/page
31. mkdir snakeeyes/blueprints/page
32. mkdir snakeeyes/blueprints/page/templates
33. mkdir snakeeyes/blueprints/page/templates/page
34. touch snakeeyes/blueprints/__init__.py
35. touch snakeeyes/blueprints/page/__init__.py
36. cd snakeeyes/blueprints/page/templates/page && touch home.html privacy.html terms.html
37. Add import statement for 'page' to 'app.py'
38. app.py: Delete reference to the initial home page from section 06; "def index("
39. Add code for html in 'page'
40. mkdir snakeeyes/templates/layouts
41. touch snakeeyes/templates/layouts/base.html
42. mkdir snakeeyes/static/fonts
43. mkdir snakeeyes/static/images
44. mkdir snakeeyes/static/scripts
45. mkdir snakeeyes/static/scripts/vendor
46. mkdir snakeeyes/static/styles
47. mkdir snakeeyes/static/styles/vendor
48. touch snakeeyes/static/styles/main.css
49. cp ~/Desktop/bsawf-course-material/07-BPs-and-Jinja-templates/snakeeyes/static/fonts/*ontawesome* \
snakeeyes/static/fonts/
50. cp ~/Desktop/bsawf-course-material/07-BPs-and-Jinja-templates/snakeeyes/static/images/*.* \
snakeeyes/static/images/
51. cp ~/Desktop/bsawf-course-material/07-BPs-and-Jinja-templates/snakeeyes/static/scripts/vendor/*.js \
snakeeyes/static/scripts/vendor
52. cp ~/Desktop/bsawf-course-material/07-BPs-and-Jinja-templates/snakeeyes/static/styles/vendor/*.min.css \
snakeeyes/static/styles/vendor
53. touch .env
54. touch snakeeyes/blueprints/page/views.py

#------------------------------
NOT in code
<li><a href="{{ url_for('page.privacy') }}">Privacy Policy</a></li>
<li><a href="{{ url_for('page.terms') }}">Terms of Service</a></li>

#--------------------
Home page
1. 3 column container - ["Place bets", "Win currency", "Leaderboard"]
2. Page container: class [container, sm-margin-top]
3. 3 links
4. Body block only; Extends "layouts/base.html"

#--------------------
Templates -  base-layout [base.html]
1. navigation bar
2. main tag, class is container
3. main tag contains:  [Header block, Body block]
4. footer
5. static - script: [bootstrap, main]
6. static - styles: [bootstrap, main, font-awesome]
7. static - images

#--------------------
$ git push origin master
$ git remote
$ got remote -v

https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes

Next Steps:-
1. Read notes on moving to webpack
2. Add terms page
3. Add privacy page
4. Review lesson 30 - Create a Home page
5. Read Pro Git - working with "remotes"
6. Pull in the "Webpack" Dockerfile
7. Create "Webpack" project structure

#---------------------
Section 8 Add testing framework

1. requirements, Add entries for testing
2. app.py, add settings override
3. ToDo: Add privacy.html
4. ToDo: Add terms.html
5. ToDo: snakeeyes/blueprints/page/views.py, uncomment privacy, terms views
6. ToDo: layouts/base.html, uncomment hrefs to prvacy, terms
7. mkdir snakeeyes/tests
8. mkdir snakeeyes/tests/page
9. touch snakeeyes/tests/__init__.py
10. touch snakeeyes/tests/conftest.py
11. touch snakeeyes/tests/page/__init__.py
12. touch snakeeyes/tests/page/test_views.py
13. test/conftest.py, Add session fixture
14. test/conftest.py, pytest works by importing and using app.create_app()
15. test/conftest.py, pytest works with @pytest.yield_fixture decorator
16. test/conftest.py, Add function fixture
17. snakeeyes/tests/page/test_views.py, Add tests
18. comment-out tests for privacy, terms
19. run tests
20. Must run build b/c requirements were added
21. run local git commands
22. run git remote

#---------------------
Section 9 - Add CLI scripting function

1. cp ~/Desktop/bsawf-course-material/09-Create-cli-script/snakeeyes/static/fonts/*ontAwesome* \
snakeeyes/static/fonts/
2. ToDo: Add privacy.html
3. ToDo: Add terms.html
4. ToDo: snakeeyes/blueprints/page/views.py, uncomment privacy, terms views
5. ToDo: layouts/base.html, uncomment hrefs to privacy, terms
6. mkdir cli
7. mkdir cli/commands
8. touch cli/__init__.py
9. touch cli/cli.py
10. touch cli/commands/__init__.py
11. touch cli/commands/cmd_cov.py
12. touch cli/commands/cmd_flake8.py
13. touch cli/commands/cmd_cov.py
14. cli/cli.py, return list of commands
15. cli/cli.py, get command, pattern: compile + eval + return function
16. dynamic eval of compiled code: https://realpython.com/python-eval-function/
17. @click.command(cls=CLI) decorator, command alias pattern
18. apply Command Alias pattern: https://click.palletsprojects.com/en/7.x/advanced/
19. touch cli/commands/cmd_test.py
20. cli/commands/cmd_cov.py, return term-missing coverage report
21. cli/commands/cmd_cov.py, uses "return subprocess.call(...)"
22. https://queirozf.com/entries/python-3-subprocess-examples#call-example-using-shell-true
23. Add line "RUN pip install..." to Dockerfile, lesson no 41 [1:45]
24. touch setup.py
25. Add setup entry with "entry-point"
26. mkdir SnakeEyes_CLI.egg-info
27. touch SnakeEyes_CLI.egg-info/dependency_links.txt
28. touch SnakeEyes_CLI.egg-info/entry_points.txt
29. touch SnakeEyes_CLI.egg-info/PKG-INFO
30. touch SnakeEyes_CLI.egg-info/requires.txt
31. touch SnakeEyes_CLI.egg-info/SOURCES.txt
32. touch SnakeEyes_CLI.egg-info/top_level.txt
33. modify "egg-info" files with required information

$ docker-compose exec website snakeeyes
$ docker-compose exec website snakeeyes flake8
$ docker-compose exec website snakeeyes test

#---------------------
Section 10 - Add Extension

Follow SAME methodology

#---------------------
Section 11 - Add Contact form


#----------------------------
Convert to Webpack update
1. mkdir assets
2. mkdir public
3. update .env
4. Change Dockerfile in steps


